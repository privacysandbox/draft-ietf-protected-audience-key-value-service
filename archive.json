{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-05-08T00:21:01.324296+00:00",
  "repo": "privacysandbox/draft-ietf-protected-audience-key-value-service",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOMnZLYc59apvN",
      "title": "Update initial draft",
      "url": "https://github.com/privacysandbox/draft-ietf-protected-audience-key-value-service/pull/1",
      "state": "MERGED",
      "author": "lusayaa",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-10-02T19:05:15Z",
      "updatedAt": "2024-10-24T14:30:05Z",
      "baseRepository": "privacysandbox/draft-ietf-protected-audience-key-value-service",
      "baseRefName": "main",
      "baseRefOid": "a0519f89956cf539ba3e8f0fbfb881f0ea3a5cbe",
      "headRepository": "lusayaa/draft-ietf-protected-audience-key-value-service",
      "headRefName": "main",
      "headRefOid": "1714c5cd1a4c0cf68f37777e85b3fff98568e6a5",
      "closedAt": "2024-10-24T14:30:05Z",
      "mergedAt": "2024-10-24T14:30:05Z",
      "mergedBy": "lusayaa",
      "mergeCommit": {
        "oid": "30d22054080b3f19af0aeb906daf57a1c839410f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMnZLYc6Lz3I-",
          "commit": {
            "abbreviatedOid": "27e0ec8"
          },
          "author": "lx3-g",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-03T13:29:47Z",
          "updatedAt": "2024-10-03T13:29:47Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOMnZLYc6L2lQl",
          "commit": {
            "abbreviatedOid": "022e163"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T17:52:01Z",
          "updatedAt": "2024-10-03T17:52:01Z",
          "comments": [
            {
              "originalPosition": 64,
              "body": "Why are all of these under \"informative\" references? Informative references are used in explanations of use cases and applications. They are not supposed to describe how to implement parts of a standard. The ones listed below also seem essential to describing the standard, so they should be normative references. Perhaps just replace the current \"normative\" references with these references and leave \"informative\" empty.",
              "createdAt": "2024-10-03T17:52:01Z",
              "updatedAt": "2024-10-03T17:52:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6L3tqj",
          "commit": {
            "abbreviatedOid": "022e163"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T20:28:20Z",
          "updatedAt": "2024-10-03T20:28:20Z",
          "comments": [
            {
              "originalPosition": 64,
              "body": "Done.",
              "createdAt": "2024-10-03T20:28:20Z",
              "updatedAt": "2024-10-03T20:28:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6L4Idh",
          "commit": {
            "abbreviatedOid": "022e163"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T21:44:31Z",
          "updatedAt": "2024-10-03T21:44:31Z",
          "comments": [
            {
              "originalPosition": 135,
              "body": "We're not using [OHTTP]. ",
              "createdAt": "2024-10-03T21:44:31Z",
              "updatedAt": "2024-10-03T21:44:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6L-yc1",
          "commit": {
            "abbreviatedOid": "022e163"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T16:38:32Z",
          "updatedAt": "2024-10-04T16:38:32Z",
          "comments": [
            {
              "originalPosition": 135,
              "body": "Done.",
              "createdAt": "2024-10-04T16:38:32Z",
              "updatedAt": "2024-10-04T16:38:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6MNzen",
          "commit": {
            "abbreviatedOid": "d1bbfa3"
          },
          "author": "JensenPaul",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-07T16:24:34Z",
          "updatedAt": "2024-10-07T17:42:33Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\ntitle: Protected Audience Key Value Services\r\n```",
              "createdAt": "2024-10-07T16:24:34Z",
              "updatedAt": "2024-10-07T17:42:33Z"
            },
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nabbrev: \"KV Services\"\r\n```",
              "createdAt": "2024-10-07T16:24:53Z",
              "updatedAt": "2024-10-07T17:42:33Z"
            },
            {
              "originalPosition": 7,
              "body": "Hmm should we change \"server-api\" to \"services\" here and in the file name and in README.md?",
              "createdAt": "2024-10-07T16:26:25Z",
              "updatedAt": "2024-10-07T17:42:34Z"
            },
            {
              "originalPosition": 80,
              "body": "```suggestion\r\nKey Value Services are used by Protected Audience to provide\r\nreal-time signals to buyers and sellers during ad selection.\r\n```",
              "createdAt": "2024-10-07T16:31:19Z",
              "updatedAt": "2024-10-07T17:42:34Z"
            },
            {
              "originalPosition": 82,
              "body": "```suggestion\r\nservices to incorporate real-time signals into ad selection.\r\n```",
              "createdAt": "2024-10-07T16:31:44Z",
              "updatedAt": "2024-10-07T17:42:34Z"
            },
            {
              "originalPosition": 83,
              "body": "```suggestion\r\nThese services utilize User-Defined Functions (UDFs) to\r\n```",
              "createdAt": "2024-10-07T16:33:37Z",
              "updatedAt": "2024-10-07T17:42:34Z"
            },
            {
              "originalPosition": 128,
              "body": "```suggestion\r\n-   The core request and response data is encoded using [CBOR].\r\n```",
              "createdAt": "2024-10-07T16:34:35Z",
              "updatedAt": "2024-10-07T17:42:34Z"
            },
            {
              "originalPosition": 123,
              "body": "```suggestion\r\n\r\nTo understand this document, it is important to know that the\r\ncommunication between the client and the remote services uses a\r\nrequest-response message exchange pattern.\r\n```",
              "createdAt": "2024-10-07T16:36:00Z",
              "updatedAt": "2024-10-07T17:42:34Z"
            },
            {
              "originalPosition": 124,
              "body": "```suggestion\r\nOn a high level, these request and response messages adhere to the following communication protocol:\r\n```",
              "createdAt": "2024-10-07T16:37:00Z",
              "updatedAt": "2024-10-07T17:42:34Z"
            },
            {
              "originalPosition": 158,
              "body": "```suggestion\r\nThe request/response is framed with this 5 byte header.\r\n```",
              "createdAt": "2024-10-07T16:49:48Z",
              "updatedAt": "2024-10-07T17:42:34Z"
            },
            {
              "originalPosition": 150,
              "body": "```suggestion\r\nBefore encryption and after decryption, the requests and responses have the following framing:\r\n```",
              "createdAt": "2024-10-07T16:53:39Z",
              "updatedAt": "2024-10-07T17:42:34Z"
            },
            {
              "originalPosition": 156,
              "body": "I think we should use some bits to specify a version number, like B&A does.",
              "createdAt": "2024-10-07T17:01:31Z",
              "updatedAt": "2024-10-07T17:42:34Z"
            },
            {
              "originalPosition": 161,
              "body": "```suggestion\r\nThe first byte is the format+compression byte. The lower 2 bits specify the format and compression.\r\nThe higher 6 bits are currently unused.\r\n```",
              "createdAt": "2024-10-07T17:02:41Z",
              "updatedAt": "2024-10-07T17:42:34Z"
            },
            {
              "originalPosition": 160,
              "body": "This should link to the #compression section.",
              "createdAt": "2024-10-07T17:05:02Z",
              "updatedAt": "2024-10-07T17:42:34Z"
            },
            {
              "originalPosition": 165,
              "body": "This should link to the #padding section.",
              "createdAt": "2024-10-07T17:05:25Z",
              "updatedAt": "2024-10-07T17:42:34Z"
            },
            {
              "originalPosition": 176,
              "body": "Can we link this to the definition of acceptCompression?",
              "createdAt": "2024-10-07T17:06:29Z",
              "updatedAt": "2024-10-07T17:42:34Z"
            },
            {
              "originalPosition": 178,
              "body": "Can we move this sentence into another section?  I don't think it makes sense to have a one sentence section. \r\n Preferably move it alongside where we specify how padding is done, like line 127.",
              "createdAt": "2024-10-07T17:15:03Z",
              "updatedAt": "2024-10-07T17:42:34Z"
            },
            {
              "originalPosition": 190,
              "body": "I think we need to explain or link to definitions of \"interest group\" and \"joining site\" here.",
              "createdAt": "2024-10-07T17:36:40Z",
              "updatedAt": "2024-10-07T17:42:34Z"
            },
            {
              "originalPosition": 198,
              "body": "Can we link \"See more details below\" to the details?",
              "createdAt": "2024-10-07T17:37:28Z",
              "updatedAt": "2024-10-07T17:42:34Z"
            },
            {
              "originalPosition": 215,
              "body": "if \"none\" is a string, we should put quotes around none, gzip, and brotli",
              "createdAt": "2024-10-07T17:38:37Z",
              "updatedAt": "2024-10-07T17:42:34Z"
            },
            {
              "originalPosition": 307,
              "body": "Should the response have the response media type? not request?",
              "createdAt": "2024-10-07T17:41:05Z",
              "updatedAt": "2024-10-07T17:42:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6MO88i",
          "commit": {
            "abbreviatedOid": "d1bbfa3"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-07T19:07:27Z",
          "updatedAt": "2024-10-07T19:07:27Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "updated",
              "createdAt": "2024-10-07T19:07:27Z",
              "updatedAt": "2024-10-07T19:07:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6MO9AM",
          "commit": {
            "abbreviatedOid": "d1bbfa3"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-07T19:07:35Z",
          "updatedAt": "2024-10-07T19:07:35Z",
          "comments": [
            {
              "originalPosition": 178,
              "body": "Done.",
              "createdAt": "2024-10-07T19:07:35Z",
              "updatedAt": "2024-10-07T19:07:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6MO9DE",
          "commit": {
            "abbreviatedOid": "d1bbfa3"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-07T19:07:41Z",
          "updatedAt": "2024-10-07T19:07:41Z",
          "comments": [
            {
              "originalPosition": 190,
              "body": "Done.",
              "createdAt": "2024-10-07T19:07:41Z",
              "updatedAt": "2024-10-07T19:07:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6MO9GQ",
          "commit": {
            "abbreviatedOid": "d1bbfa3"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-07T19:07:46Z",
          "updatedAt": "2024-10-07T19:07:47Z",
          "comments": [
            {
              "originalPosition": 198,
              "body": "Done.",
              "createdAt": "2024-10-07T19:07:47Z",
              "updatedAt": "2024-10-07T19:07:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6MO9I0",
          "commit": {
            "abbreviatedOid": "d1bbfa3"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-07T19:07:52Z",
          "updatedAt": "2024-10-07T19:07:52Z",
          "comments": [
            {
              "originalPosition": 215,
              "body": "Done.",
              "createdAt": "2024-10-07T19:07:52Z",
              "updatedAt": "2024-10-07T19:07:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6MO9L3",
          "commit": {
            "abbreviatedOid": "d1bbfa3"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-07T19:07:59Z",
          "updatedAt": "2024-10-07T19:07:59Z",
          "comments": [
            {
              "originalPosition": 307,
              "body": "Done.",
              "createdAt": "2024-10-07T19:07:59Z",
              "updatedAt": "2024-10-07T19:07:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6MO-J6",
          "commit": {
            "abbreviatedOid": "d1bbfa3"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-07T19:10:01Z",
          "updatedAt": "2024-10-07T19:10:01Z",
          "comments": [
            {
              "originalPosition": 160,
              "body": "Done.",
              "createdAt": "2024-10-07T19:10:01Z",
              "updatedAt": "2024-10-07T19:10:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6MO_CF",
          "commit": {
            "abbreviatedOid": "d1bbfa3"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-07T19:11:58Z",
          "updatedAt": "2024-10-07T19:11:58Z",
          "comments": [
            {
              "originalPosition": 156,
              "body": "I'd like to resolve this for now and if we do decide to add it, I'll do that in a follow-up",
              "createdAt": "2024-10-07T19:11:58Z",
              "updatedAt": "2024-10-07T19:11:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6MiLc-",
          "commit": {
            "abbreviatedOid": "1e51780"
          },
          "author": "JensenPaul",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-09T17:25:21Z",
          "updatedAt": "2024-10-09T17:46:16Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "I feel like we should link to the Protected Audience spec",
              "createdAt": "2024-10-09T17:25:21Z",
              "updatedAt": "2024-10-09T17:46:16Z"
            },
            {
              "originalPosition": 53,
              "body": "```suggestion\r\nreal-time signals to buyers and sellers during auctions performing ad selection.\r\n```",
              "createdAt": "2024-10-09T17:25:44Z",
              "updatedAt": "2024-10-09T17:46:16Z"
            },
            {
              "originalPosition": 66,
              "body": "Should this also link to the PA spec?",
              "createdAt": "2024-10-09T17:26:22Z",
              "updatedAt": "2024-10-09T17:46:16Z"
            },
            {
              "originalPosition": 432,
              "body": "```suggestion\r\nStructured keys are keys that the client is aware of and the client\r\ncan use the response to do\r\nadditional processing. The value of these keys must abide by the\r\nfollowing schema for the client to\r\n```",
              "createdAt": "2024-10-09T17:27:15Z",
              "updatedAt": "2024-10-09T17:46:16Z"
            },
            {
              "originalPosition": 175,
              "body": "```suggestion\r\n    ; A list of supported response compression algorithms; must contain at least one of \"none\", \"gzip\", \"brotli\"\r\n```",
              "createdAt": "2024-10-09T17:28:20Z",
              "updatedAt": "2024-10-09T17:46:16Z"
            },
            {
              "originalPosition": 182,
              "body": "```suggestion\r\n    ; Unique id of the partition in this request. Used by responses to refer to request partitions.\r\n```",
              "createdAt": "2024-10-09T17:29:15Z",
              "updatedAt": "2024-10-09T17:46:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6MtRW6",
          "commit": {
            "abbreviatedOid": "e95b4e4"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-10T15:06:55Z",
          "updatedAt": "2024-10-10T17:50:16Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "I don't feel I contributed enough to be listed as an author here. Lusa, do you want to put yourself here?",
              "createdAt": "2024-10-10T15:06:55Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 44,
              "body": "What are real-time signals? What are ad auctions? The abstract can be longer than a sentence and should provide a description of what the standard is about that can be understood without any context.",
              "createdAt": "2024-10-10T15:08:00Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 53,
              "body": "define real-time signals. What sort of use cases (rate limiting, creative approval, etc)?",
              "createdAt": "2024-10-10T15:09:39Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 105,
              "body": "The definition of media types here is confusing. It might be better to move the description of media types to where they are actually used for the Request and Response. Then you can demonstrate how they are intended to be used.",
              "createdAt": "2024-10-10T15:13:02Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 130,
              "body": "\"a set of pre-configured lengths\" - What are these lengths?\r\nAlso, you may want to delegate descriptions of padding for requests and responses to subsections in the description of requests and responses.",
              "createdAt": "2024-10-10T15:14:49Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 131,
              "body": ">Padding is applied with sizes as multiples of 2^n KBs ranging from 0 to 2MB.\r\n\r\nThis is for the response?",
              "createdAt": "2024-10-10T15:15:23Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 133,
              "body": "What happens when the response doesn't fit in 2MB?",
              "createdAt": "2024-10-10T15:15:39Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 142,
              "body": "```\r\n|    0x03     | Reserved                            |\r\n```",
              "createdAt": "2024-10-10T15:16:30Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 143,
              "body": "> For requests, the byte value is 0x00\r\n\r\nDoes that mean that requests are always uncompressed? Can we just say that - \"Requests are always uncompressed so the Format+compression byte is 0x00\"",
              "createdAt": "2024-10-10T15:17:42Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 146,
              "body": "What do you mean by \"Core\" here?",
              "createdAt": "2024-10-10T15:18:34Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 151,
              "body": "> Keys from one interest\r\n    group must be in the same partition. Keys from different interest groups with the same joining\r\n    site (see https://wicg.github.io/turtledove/#joining-interest-groups) may or may not be in the same partition.\r\n\r\nI'm not sure this is necessary. It should be up to the client to decide how to partition keys when it assembles a request ",
              "createdAt": "2024-10-10T15:19:41Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 150,
              "body": ">Each partition is a collection of keys that can be processed together\r\n\r\nProbably should be \"Each partition is a collection of keys that SHALL be processed together\"\r\n\r\nWe also probably don't need \"without any potential privacy leakage\". We may also want to add \"Keys from separate partitions MUST NOT be processed together by the service.\" Then we could add a reference to the Security Considerations section where we can say that \"Using separate partitions allow clients to break up the request to achieve desired privacy goals, such as preventing keys from an interest group joined on one origin from influencing the response for keys from an interest group joined on another origin\".",
              "createdAt": "2024-10-10T15:25:22Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 160,
              "body": "We could also add a reference here to the Security Considerations section describing why we need separate compression groups.",
              "createdAt": "2024-10-10T15:27:33Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 164,
              "body": "Can we be more explicit here? I'd rather err on the side of being too explicit. In the B&A spec I wrote the procedure for encryption in a similar section to this.",
              "createdAt": "2024-10-10T15:28:25Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 174,
              "body": "Instead of `tstr` as the type you should use a new type defined as `\"none\" / \"gzip\" / \"brotli\"`. That makes it explicit that this is a string enum.",
              "createdAt": "2024-10-10T15:29:40Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 197,
              "body": "What is `trustedBiddingSignalsSlotSizeMode`? It's not defined in this document. Either omit it or reference the field in the Protected Audience spec (https://wicg.github.io/turtledove/#dom-generatebidinterestgroup-trustedbiddingsignalsslotsizemode)",
              "createdAt": "2024-10-10T16:08:25Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 197,
              "body": "That also seems to get into how a client might use the protocol instead of a description of the protocol.",
              "createdAt": "2024-10-10T16:09:07Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 239,
              "body": "descripten -> described",
              "createdAt": "2024-10-10T16:10:20Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 238,
              "body": "The method for de-encapsulation and decryption are not specified in this spec. You should describe in more detail either here or in the relevant section.",
              "createdAt": "2024-10-10T16:11:37Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 238,
              "body": " By de-encapsulation and decryption you seem to just mean decrypting not removing the framing. We should probably be more explicit about this.",
              "createdAt": "2024-10-10T16:13:03Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 244,
              "body": "For requests the only supported compression is \"none\", correct?",
              "createdAt": "2024-10-10T16:13:40Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 250,
              "body": "How do you handle decoding errors? Also, do you require deterministic CBOR? Are there any other requirements?",
              "createdAt": "2024-10-10T16:14:41Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 252,
              "body": "What about handling fields? Are there scenarios where you would throw an error - like a compression group with no partitions, or too many partitions? What about missing fields?",
              "createdAt": "2024-10-10T16:15:44Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 256,
              "body": "Let's emphasize that this is an example. \"An example of the [CBOR] representation using the extended diagnostic notation from [CDDL] Appendix G\" (also link \"Appendix G\" to the actual Appendix G here).\r\n\r\nIn general, examples should go in the Appendices since they are non-normative.",
              "createdAt": "2024-10-10T16:18:08Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 322,
              "body": "Again, I'm not sure what \"Core\" means here.",
              "createdAt": "2024-10-10T16:18:50Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 324,
              "body": "\"The response is compressed\" is not technically true for compression scheme \"None\".",
              "createdAt": "2024-10-10T16:19:19Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 324,
              "body": "This paragraph feels like it belongs in {{response-schema}}.\r\n\r\nHere we should probably have something describing a high level view of the responses - \"An HPKE encrypted message sent as a Response to a Request, containing a framed top-level CBOR encoded payload that itself can contain multiple, possibly compressed, CBOR encoded messages.\"",
              "createdAt": "2024-10-10T16:21:39Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 331,
              "body": "Be more explicit here as well.",
              "createdAt": "2024-10-10T16:21:56Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 363,
              "body": "It's better to name things:\r\n```\r\ncompressionGroup = [* partitionOutput]\r\n```",
              "createdAt": "2024-10-10T16:22:58Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 384,
              "body": "This is more of a question about the response format than the spec itself. Why do we have a dictionary containing a single string field instead of just putting the string field directly? It make be good to have a comment about this here in case someone asks.",
              "createdAt": "2024-10-10T17:41:24Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 389,
              "body": "Move examples to Appendices.",
              "createdAt": "2024-10-10T17:43:17Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 469,
              "body": "Examples go in Appendices.",
              "createdAt": "2024-10-10T17:44:17Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 474,
              "body": "Use a different prefix for one of them. That makes it clear that they don't have to be \"signal#\"",
              "createdAt": "2024-10-10T17:44:51Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 493,
              "body": "This is not correct. We can't compress the top-level response. That leaves us open to compression ratio side-channel attacks (something to also mention in security considerations).",
              "createdAt": "2024-10-10T17:46:35Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 485,
              "body": "It might be more natural to start with key-value responses to one or more partitions and compression groups. It feels like we're starting from the half-way point instead of the beginning.",
              "createdAt": "2024-10-10T17:47:56Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            },
            {
              "originalPosition": 511,
              "body": "Add Security Considerations section.\r\n\r\nAlso IANA Considerations will likely include the new HTTP media types to be used with HTTP \"content-type\" headers (if specified in this spec).",
              "createdAt": "2024-10-10T17:49:42Z",
              "updatedAt": "2024-10-10T17:50:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M0w7l",
          "commit": {
            "abbreviatedOid": "bbe192e"
          },
          "author": "JensenPaul",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-11T11:59:06Z",
          "updatedAt": "2024-10-11T12:31:01Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "+1 to what Russ said, perhaps something like \"This document specifies a protocol for a service that can serve data with low latency and no side effects.  The data served can be used by clients for advertisement selection and the lack of side effects can be used to advance user privacy.\"",
              "createdAt": "2024-10-11T11:59:06Z",
              "updatedAt": "2024-10-11T12:31:01Z"
            },
            {
              "originalPosition": 52,
              "body": "I think we need to define TEE before we use the term.",
              "createdAt": "2024-10-11T11:59:45Z",
              "updatedAt": "2024-10-11T12:31:01Z"
            },
            {
              "originalPosition": 51,
              "body": "Words  from https://developers.google.com/privacy-sandbox/private-advertising/protected-audience\r\n```suggestion\r\n[Protected Audience](https://wicg.github.io/turtledove/) is a privacy advancing API that serves\r\nremarketing and custom audiences use cases.\r\n```",
              "createdAt": "2024-10-11T12:03:19Z",
              "updatedAt": "2024-10-11T12:31:01Z"
            },
            {
              "originalPosition": 55,
              "body": "```suggestion\r\ninto ad selection for both buyers and sellers. These services provide a\r\n```",
              "createdAt": "2024-10-11T12:03:54Z",
              "updatedAt": "2024-10-11T12:31:01Z"
            },
            {
              "originalPosition": 57,
              "body": "```suggestion\r\nis explicitly prohibited, the services may have operational side effects like\r\n```",
              "createdAt": "2024-10-11T12:04:06Z",
              "updatedAt": "2024-10-11T12:31:01Z"
            },
            {
              "originalPosition": 89,
              "body": "I think we should link HTTPS to the appropriate specification",
              "createdAt": "2024-10-11T12:05:41Z",
              "updatedAt": "2024-10-11T12:31:01Z"
            },
            {
              "originalPosition": 154,
              "body": "I find this really hard to understand.  I don't understand how each key group is \"unique\".  What is unique about it? is this a requirement of the key group or just something the client does?\r\nI don't understand what the \"tags\" are for.  I think we need some motivation.\r\nI don't understand what it means \"to look up\" a key.  Can we explain what this means and what it is looked up in?",
              "createdAt": "2024-10-11T12:17:23Z",
              "updatedAt": "2024-10-11T12:31:01Z"
            },
            {
              "originalPosition": 155,
              "body": "Why?  How is this used?",
              "createdAt": "2024-10-11T12:17:47Z",
              "updatedAt": "2024-10-11T12:31:01Z"
            },
            {
              "originalPosition": 150,
              "body": "I think we need to introduce the term interest group before using it.  Perhaps describe it as \"an identifier of information about a user collected on a particular website or application\".",
              "createdAt": "2024-10-11T12:20:33Z",
              "updatedAt": "2024-10-11T12:31:01Z"
            },
            {
              "originalPosition": 202,
              "body": "Are these picked from the below list of \"Available Tags\"?  If so, we should link to that section.\r\nIf this is an enumeration, we should declare its possible values rather than use the type \"tstr\" I think like Russ mentioned above for `acceptCompression`",
              "createdAt": "2024-10-11T12:22:21Z",
              "updatedAt": "2024-10-11T12:31:01Z"
            },
            {
              "originalPosition": 215,
              "body": "trustedBiddingSignalsKeys needs a definition, which is going to be very complicated.  Perhaps it's better to give some more general description like `\"keys\" represent the keys to be used to look up values in a table` or something that ties back to the \"to look up\" mention above.",
              "createdAt": "2024-10-11T12:24:57Z",
              "updatedAt": "2024-10-11T12:31:01Z"
            },
            {
              "originalPosition": 216,
              "body": "I don't know what \"Similarly\" is referring similarity to.\r\nIt's unclear how \"sellers may want to fetch information about a specific creative\" relates to renderUrls.\r\ntrustedScoringSignalsUrl needs a definiition, which is going to be very complicated.  Perhaps its better to give a more general description like `\"renderUrls\" represent URLs for advertisements that are used to look up values in a table`",
              "createdAt": "2024-10-11T12:25:20Z",
              "updatedAt": "2024-10-11T12:31:01Z"
            },
            {
              "originalPosition": 217,
              "body": "This needs more description.",
              "createdAt": "2024-10-11T12:28:32Z",
              "updatedAt": "2024-10-11T12:31:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M435v",
          "commit": {
            "abbreviatedOid": "e95b4e4"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:20:45Z",
          "updatedAt": "2024-10-12T02:20:46Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "Sure, I'll add Tianyang too. ",
              "createdAt": "2024-10-12T02:20:46Z",
              "updatedAt": "2024-10-12T02:20:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M439Y",
          "commit": {
            "abbreviatedOid": "e95b4e4"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:22:13Z",
          "updatedAt": "2024-10-12T02:22:13Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "Done.",
              "createdAt": "2024-10-12T02:22:13Z",
              "updatedAt": "2024-10-12T02:22:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M43-i",
          "commit": {
            "abbreviatedOid": "e95b4e4"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:22:52Z",
          "updatedAt": "2024-10-12T02:22:52Z",
          "comments": [
            {
              "originalPosition": 105,
              "body": "Done.",
              "createdAt": "2024-10-12T02:22:52Z",
              "updatedAt": "2024-10-12T02:22:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M44DC",
          "commit": {
            "abbreviatedOid": "e95b4e4"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:24:48Z",
          "updatedAt": "2024-10-12T02:24:48Z",
          "comments": [
            {
              "originalPosition": 130,
              "body": "Moved to other section. ",
              "createdAt": "2024-10-12T02:24:48Z",
              "updatedAt": "2024-10-12T02:24:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M44EG",
          "commit": {
            "abbreviatedOid": "e95b4e4"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:25:14Z",
          "updatedAt": "2024-10-12T02:25:14Z",
          "comments": [
            {
              "originalPosition": 131,
              "body": "Moved it to different sections so it's clearer.",
              "createdAt": "2024-10-12T02:25:14Z",
              "updatedAt": "2024-10-12T02:25:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M44EX",
          "commit": {
            "abbreviatedOid": "e95b4e4"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:25:20Z",
          "updatedAt": "2024-10-12T02:25:21Z",
          "comments": [
            {
              "originalPosition": 142,
              "body": "Done.",
              "createdAt": "2024-10-12T02:25:20Z",
              "updatedAt": "2024-10-12T02:25:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M44Fm",
          "commit": {
            "abbreviatedOid": "e95b4e4"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:25:53Z",
          "updatedAt": "2024-10-12T02:25:53Z",
          "comments": [
            {
              "originalPosition": 133,
              "body": "@peiwenhu how do we want to handle large responses?",
              "createdAt": "2024-10-12T02:25:53Z",
              "updatedAt": "2024-10-12T02:25:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M44F5",
          "commit": {
            "abbreviatedOid": "e95b4e4"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:26:01Z",
          "updatedAt": "2024-10-12T02:26:01Z",
          "comments": [
            {
              "originalPosition": 143,
              "body": "Done.",
              "createdAt": "2024-10-12T02:26:01Z",
              "updatedAt": "2024-10-12T02:26:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M44Gf",
          "commit": {
            "abbreviatedOid": "e95b4e4"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:26:13Z",
          "updatedAt": "2024-10-12T02:26:14Z",
          "comments": [
            {
              "originalPosition": 151,
              "body": "Done.",
              "createdAt": "2024-10-12T02:26:14Z",
              "updatedAt": "2024-10-12T02:26:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M44HF",
          "commit": {
            "abbreviatedOid": "e95b4e4"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:26:26Z",
          "updatedAt": "2024-10-12T02:26:26Z",
          "comments": [
            {
              "originalPosition": 160,
              "body": "Will do. ",
              "createdAt": "2024-10-12T02:26:26Z",
              "updatedAt": "2024-10-12T02:26:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M44HZ",
          "commit": {
            "abbreviatedOid": "e95b4e4"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:26:34Z",
          "updatedAt": "2024-10-12T02:26:34Z",
          "comments": [
            {
              "originalPosition": 164,
              "body": "Done.",
              "createdAt": "2024-10-12T02:26:34Z",
              "updatedAt": "2024-10-12T02:26:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M44Hp",
          "commit": {
            "abbreviatedOid": "e95b4e4"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:26:41Z",
          "updatedAt": "2024-10-12T02:26:41Z",
          "comments": [
            {
              "originalPosition": 174,
              "body": "Done.",
              "createdAt": "2024-10-12T02:26:41Z",
              "updatedAt": "2024-10-12T02:26:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M44Ih",
          "commit": {
            "abbreviatedOid": "e95b4e4"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:26:57Z",
          "updatedAt": "2024-10-12T02:26:58Z",
          "comments": [
            {
              "originalPosition": 197,
              "body": "Done.",
              "createdAt": "2024-10-12T02:26:58Z",
              "updatedAt": "2024-10-12T02:26:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M44Jg",
          "commit": {
            "abbreviatedOid": "e95b4e4"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:27:27Z",
          "updatedAt": "2024-10-12T02:27:28Z",
          "comments": [
            {
              "originalPosition": 239,
              "body": "Done.",
              "createdAt": "2024-10-12T02:27:27Z",
              "updatedAt": "2024-10-12T02:27:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M44KC",
          "commit": {
            "abbreviatedOid": "e95b4e4"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:27:42Z",
          "updatedAt": "2024-10-12T02:27:42Z",
          "comments": [
            {
              "originalPosition": 238,
              "body": "Done.",
              "createdAt": "2024-10-12T02:27:42Z",
              "updatedAt": "2024-10-12T02:27:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M44LC",
          "commit": {
            "abbreviatedOid": "e95b4e4"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:28:12Z",
          "updatedAt": "2024-10-12T02:28:12Z",
          "comments": [
            {
              "originalPosition": 250,
              "body": "Done.",
              "createdAt": "2024-10-12T02:28:12Z",
              "updatedAt": "2024-10-12T02:28:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M44LT",
          "commit": {
            "abbreviatedOid": "e95b4e4"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:28:17Z",
          "updatedAt": "2024-10-12T02:28:17Z",
          "comments": [
            {
              "originalPosition": 256,
              "body": "Done.",
              "createdAt": "2024-10-12T02:28:17Z",
              "updatedAt": "2024-10-12T02:28:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M44Lf",
          "commit": {
            "abbreviatedOid": "e95b4e4"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:28:26Z",
          "updatedAt": "2024-10-12T02:28:26Z",
          "comments": [
            {
              "originalPosition": 324,
              "body": "Done.",
              "createdAt": "2024-10-12T02:28:26Z",
              "updatedAt": "2024-10-12T02:28:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M44MQ",
          "commit": {
            "abbreviatedOid": "e95b4e4"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:28:58Z",
          "updatedAt": "2024-10-12T02:28:58Z",
          "comments": [
            {
              "originalPosition": 324,
              "body": "Done.",
              "createdAt": "2024-10-12T02:28:58Z",
              "updatedAt": "2024-10-12T02:28:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M44Mj",
          "commit": {
            "abbreviatedOid": "e95b4e4"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:29:07Z",
          "updatedAt": "2024-10-12T02:29:08Z",
          "comments": [
            {
              "originalPosition": 331,
              "body": "Done.",
              "createdAt": "2024-10-12T02:29:07Z",
              "updatedAt": "2024-10-12T02:29:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M44Mx",
          "commit": {
            "abbreviatedOid": "e95b4e4"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:29:13Z",
          "updatedAt": "2024-10-12T02:29:13Z",
          "comments": [
            {
              "originalPosition": 363,
              "body": "Done.",
              "createdAt": "2024-10-12T02:29:13Z",
              "updatedAt": "2024-10-12T02:29:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M44Nr",
          "commit": {
            "abbreviatedOid": "e95b4e4"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:29:45Z",
          "updatedAt": "2024-10-12T02:29:45Z",
          "comments": [
            {
              "originalPosition": 384,
              "body": "@peiwenhu I don't remember exactly why we had it like this. Do you? ",
              "createdAt": "2024-10-12T02:29:45Z",
              "updatedAt": "2024-10-12T02:29:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M44N4",
          "commit": {
            "abbreviatedOid": "e95b4e4"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:29:52Z",
          "updatedAt": "2024-10-12T02:29:52Z",
          "comments": [
            {
              "originalPosition": 389,
              "body": "Done.",
              "createdAt": "2024-10-12T02:29:52Z",
              "updatedAt": "2024-10-12T02:29:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M44OI",
          "commit": {
            "abbreviatedOid": "e95b4e4"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:30:02Z",
          "updatedAt": "2024-10-12T02:30:02Z",
          "comments": [
            {
              "originalPosition": 474,
              "body": "Done.",
              "createdAt": "2024-10-12T02:30:02Z",
              "updatedAt": "2024-10-12T02:30:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M44PA",
          "commit": {
            "abbreviatedOid": "e95b4e4"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:30:28Z",
          "updatedAt": "2024-10-12T02:30:28Z",
          "comments": [
            {
              "originalPosition": 493,
              "body": "Thanks for catching that. ",
              "createdAt": "2024-10-12T02:30:28Z",
              "updatedAt": "2024-10-12T02:30:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M44PR",
          "commit": {
            "abbreviatedOid": "e95b4e4"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:30:35Z",
          "updatedAt": "2024-10-12T02:30:35Z",
          "comments": [
            {
              "originalPosition": 485,
              "body": "Done.",
              "createdAt": "2024-10-12T02:30:35Z",
              "updatedAt": "2024-10-12T02:30:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M44RI",
          "commit": {
            "abbreviatedOid": "e95b4e4"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:31:24Z",
          "updatedAt": "2024-10-12T02:31:24Z",
          "comments": [
            {
              "originalPosition": 511,
              "body": "Done. Will start a doc on that. ",
              "createdAt": "2024-10-12T02:31:24Z",
              "updatedAt": "2024-10-12T02:31:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M44UG",
          "commit": {
            "abbreviatedOid": "bbe192e"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:32:49Z",
          "updatedAt": "2024-10-12T02:32:50Z",
          "comments": [
            {
              "originalPosition": 202,
              "body": "@peiwenhu are we prescribing that it is from the list of available tags? I don't think we should, since this will be input to the UDF.",
              "createdAt": "2024-10-12T02:32:49Z",
              "updatedAt": "2024-10-12T02:32:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M44Uu",
          "commit": {
            "abbreviatedOid": "bbe192e"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:33:05Z",
          "updatedAt": "2024-10-12T02:33:06Z",
          "comments": [
            {
              "originalPosition": 215,
              "body": "Done.",
              "createdAt": "2024-10-12T02:33:05Z",
              "updatedAt": "2024-10-12T02:33:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M44WU",
          "commit": {
            "abbreviatedOid": "e95b4e4"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:33:52Z",
          "updatedAt": "2024-10-12T02:33:52Z",
          "comments": [
            {
              "originalPosition": 146,
              "body": "Removed that",
              "createdAt": "2024-10-12T02:33:52Z",
              "updatedAt": "2024-10-12T02:33:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M44XJ",
          "commit": {
            "abbreviatedOid": "e95b4e4"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:34:13Z",
          "updatedAt": "2024-10-12T02:34:13Z",
          "comments": [
            {
              "originalPosition": 244,
              "body": "Right, fixed it. ",
              "createdAt": "2024-10-12T02:34:13Z",
              "updatedAt": "2024-10-12T02:34:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M44a4",
          "commit": {
            "abbreviatedOid": "bbe192e"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:36:15Z",
          "updatedAt": "2024-10-12T02:36:15Z",
          "comments": [
            {
              "originalPosition": 154,
              "body": "Changed the wording.",
              "createdAt": "2024-10-12T02:36:15Z",
              "updatedAt": "2024-10-12T02:36:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6M44uU",
          "commit": {
            "abbreviatedOid": "e95b4e4"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-12T02:45:09Z",
          "updatedAt": "2024-10-12T02:45:10Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "Done.",
              "createdAt": "2024-10-12T02:45:10Z",
              "updatedAt": "2024-10-12T02:45:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6NH7q5",
          "commit": {
            "abbreviatedOid": "991394d"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-14T21:10:31Z",
          "updatedAt": "2024-10-14T21:37:50Z",
          "comments": [
            {
              "originalPosition": 159,
              "body": "\"Different compression groups must be compressed separately...\" That's referring to the response, but from the context it could refer to the request.\r\n\r\nSo maybe something like:\r\n\"The responses for different compression groups will be compressed separately in the response (see {{compression-group}}). Compressing the different groups separately avoids leaking the similarity of responses for different groups.\"",
              "createdAt": "2024-10-14T21:10:31Z",
              "updatedAt": "2024-10-14T21:37:50Z"
            },
            {
              "originalPosition": 212,
              "body": "The client needs to save `sctxt`.",
              "createdAt": "2024-10-14T21:13:08Z",
              "updatedAt": "2024-10-14T21:37:50Z"
            },
            {
              "originalPosition": 347,
              "body": "Should the schema specify that at least one \"partitions\" is required (e.g. `partitions: [1* partition]`)?",
              "createdAt": "2024-10-14T21:19:11Z",
              "updatedAt": "2024-10-14T21:37:50Z"
            },
            {
              "originalPosition": 352,
              "body": "`compressionGroupid` -> `compressionGroupId`",
              "createdAt": "2024-10-14T21:21:25Z",
              "updatedAt": "2024-10-14T21:37:50Z"
            },
            {
              "originalPosition": 350,
              "body": "In the schema, the `id` and `compressionGroupId` fields are required in the request.  It seems unusual to check for the presence of a required field.",
              "createdAt": "2024-10-14T21:21:48Z",
              "updatedAt": "2024-10-14T21:37:50Z"
            },
            {
              "originalPosition": 430,
              "body": "What does the server do if the response does not fit in 2MB?",
              "createdAt": "2024-10-14T21:23:52Z",
              "updatedAt": "2024-10-14T21:37:50Z"
            },
            {
              "originalPosition": 544,
              "body": "What data type is `payload`?",
              "createdAt": "2024-10-14T21:27:19Z",
              "updatedAt": "2024-10-14T21:37:50Z"
            },
            {
              "originalPosition": 471,
              "body": "Should this field be required? I'm not sure what a partitionOutput without an ID would mean.",
              "createdAt": "2024-10-14T21:29:25Z",
              "updatedAt": "2024-10-14T21:37:50Z"
            },
            {
              "originalPosition": 549,
              "body": "Maybe clearer to rewrite as \"Set `partition output map[partition id]` to `partitionOutput`. Also consider renaming `partition output map` to not have spaces - either `partition_output_map` or `partitionOutputMap`.",
              "createdAt": "2024-10-14T21:31:42Z",
              "updatedAt": "2024-10-14T21:37:50Z"
            },
            {
              "originalPosition": 551,
              "body": "What is the type of `compression group`?",
              "createdAt": "2024-10-14T21:32:08Z",
              "updatedAt": "2024-10-14T21:37:50Z"
            },
            {
              "originalPosition": 556,
              "body": "Add -> Append?",
              "createdAt": "2024-10-14T21:33:17Z",
              "updatedAt": "2024-10-14T21:37:50Z"
            },
            {
              "originalPosition": 559,
              "body": "It doesn't have to be GZIP though. Maybe we should specify at the top that this response is to a request that included \"gzip\" as one of the acceptable compressions.",
              "createdAt": "2024-10-14T21:35:17Z",
              "updatedAt": "2024-10-14T21:37:50Z"
            },
            {
              "originalPosition": 560,
              "body": "So on compression failure, we send an empty message field instead of omitting it entirely? It seems like we should just skip the entire compression group.",
              "createdAt": "2024-10-14T21:36:47Z",
              "updatedAt": "2024-10-14T21:37:50Z"
            },
            {
              "originalPosition": 571,
              "body": "`framing header` -> `framed payload`.",
              "createdAt": "2024-10-14T21:37:27Z",
              "updatedAt": "2024-10-14T21:37:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6NRgHG",
          "commit": {
            "abbreviatedOid": "991394d"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-15T17:57:50Z",
          "updatedAt": "2024-10-15T17:57:51Z",
          "comments": [
            {
              "originalPosition": 159,
              "body": "Done.",
              "createdAt": "2024-10-15T17:57:50Z",
              "updatedAt": "2024-10-15T17:57:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6NRgKy",
          "commit": {
            "abbreviatedOid": "991394d"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-15T17:57:54Z",
          "updatedAt": "2024-10-15T17:57:54Z",
          "comments": [
            {
              "originalPosition": 212,
              "body": "Done.",
              "createdAt": "2024-10-15T17:57:54Z",
              "updatedAt": "2024-10-15T17:57:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6NRhbA",
          "commit": {
            "abbreviatedOid": "991394d"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-15T17:59:36Z",
          "updatedAt": "2024-10-15T17:59:36Z",
          "comments": [
            {
              "originalPosition": 352,
              "body": "Done.",
              "createdAt": "2024-10-15T17:59:36Z",
              "updatedAt": "2024-10-15T17:59:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6NRhf1",
          "commit": {
            "abbreviatedOid": "991394d"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-15T17:59:46Z",
          "updatedAt": "2024-10-15T17:59:46Z",
          "comments": [
            {
              "originalPosition": 350,
              "body": "Done.",
              "createdAt": "2024-10-15T17:59:46Z",
              "updatedAt": "2024-10-15T17:59:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6NRhob",
          "commit": {
            "abbreviatedOid": "991394d"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-15T18:00:01Z",
          "updatedAt": "2024-10-15T18:00:02Z",
          "comments": [
            {
              "originalPosition": 430,
              "body": "@peiwenhu ",
              "createdAt": "2024-10-15T18:00:01Z",
              "updatedAt": "2024-10-15T18:00:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6NRhuv",
          "commit": {
            "abbreviatedOid": "991394d"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-15T18:00:13Z",
          "updatedAt": "2024-10-15T18:00:13Z",
          "comments": [
            {
              "originalPosition": 544,
              "body": "Done.",
              "createdAt": "2024-10-15T18:00:13Z",
              "updatedAt": "2024-10-15T18:00:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6NRhzv",
          "commit": {
            "abbreviatedOid": "991394d"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-15T18:00:22Z",
          "updatedAt": "2024-10-15T18:00:22Z",
          "comments": [
            {
              "originalPosition": 471,
              "body": "Done.",
              "createdAt": "2024-10-15T18:00:22Z",
              "updatedAt": "2024-10-15T18:00:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6NRh-Q",
          "commit": {
            "abbreviatedOid": "991394d"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-15T18:00:42Z",
          "updatedAt": "2024-10-15T18:00:43Z",
          "comments": [
            {
              "originalPosition": 549,
              "body": "This is technically not correct, actually. Keeping it as is.",
              "createdAt": "2024-10-15T18:00:42Z",
              "updatedAt": "2024-10-15T18:00:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6NRiDc",
          "commit": {
            "abbreviatedOid": "991394d"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-15T18:00:53Z",
          "updatedAt": "2024-10-15T18:00:53Z",
          "comments": [
            {
              "originalPosition": 551,
              "body": "Done.",
              "createdAt": "2024-10-15T18:00:53Z",
              "updatedAt": "2024-10-15T18:00:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6NRiFi",
          "commit": {
            "abbreviatedOid": "991394d"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-15T18:00:56Z",
          "updatedAt": "2024-10-15T18:00:57Z",
          "comments": [
            {
              "originalPosition": 556,
              "body": "Done.",
              "createdAt": "2024-10-15T18:00:56Z",
              "updatedAt": "2024-10-15T18:00:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6NRiJp",
          "commit": {
            "abbreviatedOid": "991394d"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-15T18:01:05Z",
          "updatedAt": "2024-10-15T18:01:05Z",
          "comments": [
            {
              "originalPosition": 559,
              "body": "Done.",
              "createdAt": "2024-10-15T18:01:05Z",
              "updatedAt": "2024-10-15T18:01:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6NRiP5",
          "commit": {
            "abbreviatedOid": "991394d"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-15T18:01:17Z",
          "updatedAt": "2024-10-15T18:01:17Z",
          "comments": [
            {
              "originalPosition": 560,
              "body": "Done.",
              "createdAt": "2024-10-15T18:01:17Z",
              "updatedAt": "2024-10-15T18:01:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6NRiTJ",
          "commit": {
            "abbreviatedOid": "991394d"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-15T18:01:23Z",
          "updatedAt": "2024-10-15T18:01:24Z",
          "comments": [
            {
              "originalPosition": 571,
              "body": "Done.",
              "createdAt": "2024-10-15T18:01:23Z",
              "updatedAt": "2024-10-15T18:01:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6NSMMC",
          "commit": {
            "abbreviatedOid": "a406bc4"
          },
          "author": "peiwenhu",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-15T19:21:38Z",
          "updatedAt": "2024-10-15T19:21:38Z",
          "comments": [
            {
              "originalPosition": 430,
              "body": "It returns an error response code. in the future the response code can be inside the ciphertext once we have error handling defined.",
              "createdAt": "2024-10-15T19:21:38Z",
              "updatedAt": "2024-10-15T19:21:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6NeADH",
          "commit": {
            "abbreviatedOid": "a406bc4"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-16T19:14:13Z",
          "updatedAt": "2024-10-16T20:26:22Z",
          "comments": [
            {
              "originalPosition": 256,
              "body": "Are you going to specify the \"preconfigured lengths\" here? If not, you might just want to say that \"Messages MAY be zero padded\".",
              "createdAt": "2024-10-16T19:14:13Z",
              "updatedAt": "2024-10-16T20:26:22Z"
            },
            {
              "originalPosition": 306,
              "body": "It sounds like there are different types of tags: `namespace` tags and other unspecified tags. Can you describe this more explicitly?",
              "createdAt": "2024-10-16T19:16:22Z",
              "updatedAt": "2024-10-16T20:26:22Z"
            },
            {
              "originalPosition": 44,
              "body": "So the values in `compressionGroupMap` are...itself? Shouldn't it be a list of partitions?",
              "createdAt": "2024-10-16T20:20:21Z",
              "updatedAt": "2024-10-16T20:26:22Z"
            },
            {
              "originalPosition": 61,
              "body": "You may want to specify how the Key Value Service creates the \"partitionOutputs\"\r\n - as the output from the UDF given the keys (and what other fields) in the corresponding input\r\n - describe constraints on UDF?",
              "createdAt": "2024-10-16T20:25:07Z",
              "updatedAt": "2024-10-16T20:26:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6Nx-nj",
          "commit": {
            "abbreviatedOid": "8964519"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-18T18:00:14Z",
          "updatedAt": "2024-10-18T18:00:14Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "Thanks, added a short paragraph on UDFs. ",
              "createdAt": "2024-10-18T18:00:14Z",
              "updatedAt": "2024-10-18T18:00:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6NyA1S",
          "commit": {
            "abbreviatedOid": "a406bc4"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-18T18:06:10Z",
          "updatedAt": "2024-10-18T18:06:10Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "Thanks for catching that. The values should be a list of partition Ids. ",
              "createdAt": "2024-10-18T18:06:10Z",
              "updatedAt": "2024-10-18T18:06:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6NyCDI",
          "commit": {
            "abbreviatedOid": "991394d"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-18T18:09:20Z",
          "updatedAt": "2024-10-18T18:09:20Z",
          "comments": [
            {
              "originalPosition": 306,
              "body": "It looks like we've updated the API spec to drop namespace. Updated it. ",
              "createdAt": "2024-10-18T18:09:20Z",
              "updatedAt": "2024-10-18T18:09:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6NyCQp",
          "commit": {
            "abbreviatedOid": "991394d"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-18T18:09:55Z",
          "updatedAt": "2024-10-18T18:09:55Z",
          "comments": [
            {
              "originalPosition": 256,
              "body": "Done.",
              "createdAt": "2024-10-18T18:09:55Z",
              "updatedAt": "2024-10-18T18:09:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6NyCw7",
          "commit": {
            "abbreviatedOid": "bbe192e"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-18T18:11:13Z",
          "updatedAt": "2024-10-18T18:11:13Z",
          "comments": [
            {
              "originalPosition": 202,
              "body": "Discussed offline, we don't really want to restrict it to only those tags.",
              "createdAt": "2024-10-18T18:11:13Z",
              "updatedAt": "2024-10-18T18:11:13Z"
            }
          ]
        }
      ]
    },
    {
      "number": 2,
      "id": "PR_kwDOMnZLYc6A2N_O",
      "title": "Add request generating and response parsing sections",
      "url": "https://github.com/privacysandbox/draft-ietf-protected-audience-key-value-service/pull/2",
      "state": "MERGED",
      "author": "xtlsheep",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-11-04T20:13:51Z",
      "updatedAt": "2024-12-06T20:09:36Z",
      "baseRepository": "privacysandbox/draft-ietf-protected-audience-key-value-service",
      "baseRefName": "main",
      "baseRefOid": "760aaf79db78ca6130e67c7a403ee5d1451c33f0",
      "headRepository": "xtlsheep/draft-ietf-protected-audience-key-value-service",
      "headRefName": "patch-1",
      "headRefOid": "78c461c46387ac3d3656b9a965ce71146bdc355e",
      "closedAt": "2024-12-06T20:09:36Z",
      "mergedAt": "2024-12-06T20:09:36Z",
      "mergedBy": "JensenPaul",
      "mergeCommit": {
        "oid": "9b13bb02d42e3d5e6389e20c67d0b210574ca551"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMnZLYc6RO2dO",
          "commit": {
            "abbreviatedOid": "0455207"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-14T16:20:45Z",
          "updatedAt": "2024-11-14T16:27:18Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Should we be setting `partition[\"id\"]` to `compression group id` here? Otherwise all the partitions will have an ID of 0.",
              "createdAt": "2024-11-14T16:20:45Z",
              "updatedAt": "2024-11-14T16:27:18Z"
            },
            {
              "originalPosition": 64,
              "body": "The framing header doesn't have a Version field. Do you mean \"Compression\"?",
              "createdAt": "2024-11-14T16:23:55Z",
              "updatedAt": "2024-11-14T16:27:18Z"
            },
            {
              "originalPosition": 75,
              "body": "You could probably combine these cases to something like:\r\n\r\nSet `serialized content` to the result of decompressing `group[\"content\"]` according to the compression algorithm specified in the `framing header`'s `Compression` field, returning failure if decompression fails.",
              "createdAt": "2024-11-14T16:25:36Z",
              "updatedAt": "2024-11-14T16:27:18Z"
            },
            {
              "originalPosition": 85,
              "body": "You're not doing anything with the partition IDs or compression IDs here. I think those are necessary in order to map the response back to the request.",
              "createdAt": "2024-11-14T16:27:13Z",
              "updatedAt": "2024-11-14T16:27:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6RaPYU",
          "commit": {
            "abbreviatedOid": "60d4d47"
          },
          "author": "xtlsheep",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-15T20:35:21Z",
          "updatedAt": "2024-11-15T21:44:32Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Gotcha, this request generation part will be updated to a new version that takes a list of compression group, which has a list of partitions, and use counters to assign compression group id and partition id. Will let you know after the new patch is uploaded.",
              "createdAt": "2024-11-15T20:35:21Z",
              "updatedAt": "2024-11-15T21:44:32Z"
            },
            {
              "originalPosition": 64,
              "body": "Yeah, changed it to `Compression`.",
              "createdAt": "2024-11-15T21:10:03Z",
              "updatedAt": "2024-11-15T21:44:32Z"
            },
            {
              "originalPosition": 75,
              "body": "Done.",
              "createdAt": "2024-11-15T21:12:31Z",
              "updatedAt": "2024-11-15T21:44:32Z"
            },
            {
              "originalPosition": 85,
              "body": "Added compression group id and partition id to the output result map.",
              "createdAt": "2024-11-15T21:44:02Z",
              "updatedAt": "2024-11-15T21:44:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6RpOLt",
          "commit": {
            "abbreviatedOid": "0622706"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-18T19:18:35Z",
          "updatedAt": "2024-11-18T19:32:08Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "I'm having trouble parsing what `compression groups` list looks like. What do you mean by \"from key `\"partitions\"` to value `partitions`? I don't see a definition from either type, and I'm not sure what the quote characters in `\"partitions`\" indicate.\r\n",
              "createdAt": "2024-11-18T19:18:35Z",
              "updatedAt": "2024-11-18T19:32:08Z"
            },
            {
              "originalPosition": 21,
              "body": "You're looping over `compression groups` and then over a field in  `compression groups`. It seems like that would give you all combinations of both, which is probably not what you want.",
              "createdAt": "2024-11-18T19:30:04Z",
              "updatedAt": "2024-11-18T19:32:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6R0tOH",
          "commit": {
            "abbreviatedOid": "993a20d"
          },
          "author": "xtlsheep",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-19T19:47:02Z",
          "updatedAt": "2024-11-19T21:32:46Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "As discussed, this is a typo here. Changed `compression groups` to `group`.",
              "createdAt": "2024-11-19T19:47:02Z",
              "updatedAt": "2024-11-19T21:32:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6R1av7",
          "commit": {
            "abbreviatedOid": "0622706"
          },
          "author": "xtlsheep",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-19T21:34:08Z",
          "updatedAt": "2024-11-19T21:34:08Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "As discussed, updated the description of input arguments, and add a new field \"namespace\" in the partition struct.",
              "createdAt": "2024-11-19T21:34:08Z",
              "updatedAt": "2024-11-19T21:34:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6R1oJW",
          "commit": {
            "abbreviatedOid": "993a20d"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Almost there, I think.",
          "createdAt": "2024-11-19T22:09:43Z",
          "updatedAt": "2024-11-19T22:16:30Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "We better not copy each tag blindly. We should look through each tag in [2.2.3.1](https://privacysandbox.github.io/draft-ietf-protected-audience-key-value-service/draft-ietf-protected-audience-key-value-services.html#section-2.2.3.1) so that we only extract recognized tags. Otherwise it may be a problem if we add new tag types.",
              "createdAt": "2024-11-19T22:09:43Z",
              "updatedAt": "2024-11-19T22:16:30Z"
            },
            {
              "originalPosition": 43,
              "body": "Return `request` and `request context`.\r\n(add missing space)",
              "createdAt": "2024-11-19T22:10:30Z",
              "updatedAt": "2024-11-19T22:16:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6R_4Je",
          "commit": {
            "abbreviatedOid": "35cc405"
          },
          "author": "xtlsheep",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-20T18:48:27Z",
          "updatedAt": "2024-11-20T18:48:41Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "Add a if case to check if the tag is one of those available tags.",
              "createdAt": "2024-11-20T18:48:27Z",
              "updatedAt": "2024-11-20T18:48:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6R_4U7",
          "commit": {
            "abbreviatedOid": "993a20d"
          },
          "author": "xtlsheep",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-20T18:48:52Z",
          "updatedAt": "2024-11-20T18:48:52Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "Done",
              "createdAt": "2024-11-20T18:48:52Z",
              "updatedAt": "2024-11-20T18:48:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6SJ0E1",
          "commit": {
            "abbreviatedOid": "35cc405"
          },
          "author": "brusshamilton",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-21T16:36:48Z",
          "updatedAt": "2024-11-21T16:39:36Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "I still think it is cleaner to loop through the available tags and then see if the tag exists, but I guess this works as well.",
              "createdAt": "2024-11-21T16:36:48Z",
              "updatedAt": "2024-11-21T16:39:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6SXL41",
          "commit": {
            "abbreviatedOid": "29e0733"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-22T20:12:25Z",
          "updatedAt": "2024-11-22T20:12:25Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "I wonder if you also want to indicate here that this is an example that only is looking to accept no compression or gzip (0 or 2), which is why it checks for 0 or 2. \r\n\r\nOr you may want to change the language from \"Client MUST\" to \"Client MAY\". Otherwise it makes it seem like all clients MUST reject compression bit 1.",
              "createdAt": "2024-11-22T20:12:25Z",
              "updatedAt": "2024-11-22T20:12:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6SXaU1",
          "commit": {
            "abbreviatedOid": "29e0733"
          },
          "author": "xtlsheep",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-22T20:44:45Z",
          "updatedAt": "2024-11-22T20:44:45Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "But don't we want to reject the the responses with compression bit as 1 for now?",
              "createdAt": "2024-11-22T20:44:45Z",
              "updatedAt": "2024-11-22T20:44:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6SYd3v",
          "commit": {
            "abbreviatedOid": "29e0733"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-22T22:46:02Z",
          "updatedAt": "2024-11-22T22:46:03Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "Oh, for now, yes. We can update this later then.",
              "createdAt": "2024-11-22T22:46:03Z",
              "updatedAt": "2024-11-22T22:46:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6SipZ8",
          "commit": {
            "abbreviatedOid": "29e0733"
          },
          "author": "lx3-g",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-25T14:13:41Z",
          "updatedAt": "2024-11-25T14:13:41Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOMnZLYc6TchQt",
          "commit": {
            "abbreviatedOid": "29e0733"
          },
          "author": "JensenPaul",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-02T19:27:45Z",
          "updatedAt": "2024-12-02T20:29:19Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "```suggestion\r\n    1. Set `p[\"compressionGroupId\"]` to `group[\"compressionGroupId\"]`.\r\n```",
              "createdAt": "2024-12-02T19:27:45Z",
              "updatedAt": "2024-12-02T20:29:19Z"
            },
            {
              "originalPosition": 35,
              "body": "I don't think this should be an HTTP reference, but should instead be a reference to #tags or perhaps {{Available Tags}}\r\n",
              "createdAt": "2024-12-02T20:12:47Z",
              "updatedAt": "2024-12-02T20:29:19Z"
            },
            {
              "originalPosition": 16,
              "body": "```suggestion\r\na `compressionGroupID` and one or more `partition`s. Each `partition`\r\n```\r\nI'm not sure if I'm using the right quotes, but I think we need to make this match the steps below",
              "createdAt": "2024-12-02T20:15:41Z",
              "updatedAt": "2024-12-02T20:29:19Z"
            },
            {
              "originalPosition": 17,
              "body": "I don't think we should say \"such as\" if they're required, which according to the steps below it looks like they are.",
              "createdAt": "2024-12-02T20:16:39Z",
              "updatedAt": "2024-12-02T20:29:19Z"
            },
            {
              "originalPosition": 15,
              "body": "```suggestion\r\ncompression group structs. Each compression group struct contains\r\n```",
              "createdAt": "2024-12-02T20:17:10Z",
              "updatedAt": "2024-12-02T20:29:19Z"
            },
            {
              "originalPosition": 17,
              "body": "I don't think we should say \"includes multiple keys\" as this is not very definitive or specific.  I'd say it's a struct with some required fields, or it's a map with specific key and value types.",
              "createdAt": "2024-12-02T20:19:00Z",
              "updatedAt": "2024-12-02T20:29:19Z"
            },
            {
              "originalPosition": 19,
              "body": "```suggestion\r\n\"metadata\", whose value is a map where both keys and values are strings;\r\nand \"namespace\", whose value is a map where keys are strings and values\r\n```",
              "createdAt": "2024-12-02T20:19:42Z",
              "updatedAt": "2024-12-02T20:29:19Z"
            },
            {
              "originalPosition": 71,
              "body": "```suggestion\r\nIt takes as input the `request context`, returned from\r\n{{request-generate}}, and an `encrypted response`, an array of bytes from the Key Value Service generated by {{Generating a Response}}.\r\n```\r\nI don't know if I'm using the right syntax here.",
              "createdAt": "2024-12-02T20:26:51Z",
              "updatedAt": "2024-12-02T20:29:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6TgG_C",
          "commit": {
            "abbreviatedOid": "29e0733"
          },
          "author": "xtlsheep",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-03T06:10:41Z",
          "updatedAt": "2024-12-03T06:10:41Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "Changed to `compression group id` which represents the value of partition[\"compressionGroupId\"].",
              "createdAt": "2024-12-03T06:10:41Z",
              "updatedAt": "2024-12-03T06:10:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6TgHQG",
          "commit": {
            "abbreviatedOid": "29e0733"
          },
          "author": "xtlsheep",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-03T06:11:32Z",
          "updatedAt": "2024-12-03T06:11:32Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "Changed to \"which contain\"",
              "createdAt": "2024-12-03T06:11:32Z",
              "updatedAt": "2024-12-03T06:11:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6TgKb3",
          "commit": {
            "abbreviatedOid": "29e0733"
          },
          "author": "xtlsheep",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-03T06:18:34Z",
          "updatedAt": "2024-12-03T06:18:34Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "Changed this sentence to\r\n```\r\nEach `partition` is a map with specified keys, which are \"id,\" ...\r\n```",
              "createdAt": "2024-12-03T06:18:34Z",
              "updatedAt": "2024-12-03T06:18:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6UKPNo",
          "commit": {
            "abbreviatedOid": "31784bb"
          },
          "author": "JensenPaul",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-06T19:36:11Z",
          "updatedAt": "2024-12-06T19:52:01Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nThis algorithm takes as input:\r\n* an [HPKE] `public key`.\r\n* a `key id` integer associated with `public key`.\r\n* a `metadata` map for global configuration, where both keys and\r\nvalues are strings.\r\n* a `compression groups`, which is a list of `group`s, each\r\nwith the following parameters:\r\n * a `compressionGroupId` integer identifier of this compression\r\n   group.\r\n * a `partitions`, which is a list of `partition`s belonging to this compression\r\n   group. Each `partition` has the following parameters:\r\n   * an `id` integer identifier of this partition.\r\n   * a `namespace` map whose keys are strings and values are list of\r\n     strings.\r\n   * a `metadata` map whose keys and values are strings.\r\n```",
              "createdAt": "2024-12-06T19:36:11Z",
              "updatedAt": "2024-12-06T19:52:01Z"
            }
          ]
        }
      ]
    },
    {
      "number": 3,
      "id": "PR_kwDOMnZLYc6D7ZHa",
      "title": "Include clear text http headers in spec",
      "url": "https://github.com/privacysandbox/draft-ietf-protected-audience-key-value-service/pull/3",
      "state": "MERGED",
      "author": "lusayaa",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-12-03T17:57:50Z",
      "updatedAt": "2025-01-06T15:21:15Z",
      "baseRepository": "privacysandbox/draft-ietf-protected-audience-key-value-service",
      "baseRefName": "main",
      "baseRefOid": "7a532ff0c73c42fb8b098fb56cf5bf758f919454",
      "headRepository": "privacysandbox/draft-ietf-protected-audience-key-value-service",
      "headRefName": "lusayaa-patch-1",
      "headRefOid": "107d80781abb7c26d0fd1ea9662a22ee31c69716",
      "closedAt": "2025-01-06T15:21:13Z",
      "mergedAt": "2025-01-06T15:21:13Z",
      "mergedBy": "lusayaa",
      "mergeCommit": {
        "oid": "28a2e13c143c4168351e6e393348eb01e22f30cb"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMnZLYc6Tm4Rx",
          "commit": {
            "abbreviatedOid": "a7ba4f9"
          },
          "author": "lx3-g",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-03T18:01:15Z",
          "updatedAt": "2024-12-03T18:01:15Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOMnZLYc6Wq78a",
          "commit": {
            "abbreviatedOid": "107d807"
          },
          "author": "peiwenhu",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-02T16:11:23Z",
          "updatedAt": "2025-01-02T16:11:23Z",
          "comments": []
        }
      ]
    },
    {
      "number": 4,
      "id": "PR_kwDOMnZLYc6KJBcj",
      "title": "Add IANA considerations section",
      "url": "https://github.com/privacysandbox/draft-ietf-protected-audience-key-value-service/pull/4",
      "state": "MERGED",
      "author": "lusayaa",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "As per https://datatracker.ietf.org/doc/html/rfc6838",
      "createdAt": "2025-02-05T13:25:07Z",
      "updatedAt": "2025-02-05T13:36:03Z",
      "baseRepository": "privacysandbox/draft-ietf-protected-audience-key-value-service",
      "baseRefName": "main",
      "baseRefOid": "60a0b7612641f2c31818d2a8ef761a25b7396233",
      "headRepository": "lusayaa/draft-ietf-protected-audience-key-value-service",
      "headRefName": "main",
      "headRefOid": "a9ca8743dbd1ca790d904721e04e31b6e7542a40",
      "closedAt": "2025-02-05T13:36:03Z",
      "mergedAt": "2025-02-05T13:36:03Z",
      "mergedBy": "lusayaa",
      "mergeCommit": {
        "oid": "03cc49ab101ffcc04421e871a1f43b40efc1773c"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 5,
      "id": "PR_kwDOMnZLYc6M-G-h",
      "title": "specify compression group id",
      "url": "https://github.com/privacysandbox/draft-ietf-protected-audience-key-value-service/pull/5",
      "state": "MERGED",
      "author": "lusayaa",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-02-28T17:37:06Z",
      "updatedAt": "2025-02-28T17:59:57Z",
      "baseRepository": "privacysandbox/draft-ietf-protected-audience-key-value-service",
      "baseRefName": "main",
      "baseRefOid": "372bea5f8a235762a8b8ba68a75277cd8ea9e73e",
      "headRepository": "lusayaa/draft-ietf-protected-audience-key-value-service",
      "headRefName": "main",
      "headRefOid": "74fd6a1494bccad5f8151c3158bfc7498b418e3b",
      "closedAt": "2025-02-28T17:59:57Z",
      "mergedAt": "2025-02-28T17:59:57Z",
      "mergedBy": "lusayaa",
      "mergeCommit": {
        "oid": "1cdefbd4bba64306c6dc44daad292f3282f1ea5b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 6,
      "id": "PR_kwDOMnZLYc6SsJq-",
      "title": "Add perPartitionMetadata to spec",
      "url": "https://github.com/privacysandbox/draft-ietf-protected-audience-key-value-service/pull/6",
      "state": "MERGED",
      "author": "lusayaa",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-04-15T15:20:36Z",
      "updatedAt": "2025-04-15T15:20:51Z",
      "baseRepository": "privacysandbox/draft-ietf-protected-audience-key-value-service",
      "baseRefName": "main",
      "baseRefOid": "0caeb1ae64ba4ae3711c74dede9f217a9874c9d9",
      "headRepository": "lusayaa/draft-ietf-protected-audience-key-value-service",
      "headRefName": "main",
      "headRefOid": "e5b969106d8a410348ae8fb7b54a3c342b7611ed",
      "closedAt": "2025-04-15T15:20:43Z",
      "mergedAt": "2025-04-15T15:20:43Z",
      "mergedBy": "lusayaa",
      "mergeCommit": {
        "oid": "5f2886576de476dac978f2b983755ce25faf9c7b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMnZLYc6lCUBc",
          "commit": {
            "abbreviatedOid": "e5b9691"
          },
          "author": "gemini-code-assist",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "Hello @lusayaa, I'm Gemini Code Assist[^1]! I'm currently reviewing this pull request and will post my feedback shortly. In the meantime, here's a summary to help you and other reviewers quickly get up to speed!\n\n## Summary of Changes\nThis pull request introduces the `perPartitionMetadata` field to the request specification. This allows for partition-level metadata to be included in requests, which can contain contextual data such as `sellerTKVSignals` or `buyerTKVSignals`. The changes involve adding the `perPartitionMetadata` field to the `request` object and defining the structure of `perPartitionMetadata` and `contextualDataEntry` objects in the `draft-ietf-protected-audience-key-value-services.md` file.\n\n### Highlights\n* **New field: `perPartitionMetadata`**: Adds a new optional field `perPartitionMetadata` to the `request` object, enabling the inclusion of partition-specific metadata.\n* **Definition of `perPartitionMetadata`**: Defines the structure of the `perPartitionMetadata` object, which includes an optional `contextualData` field.\n* **Definition of `contextualDataEntry`**: Defines the structure of the `contextualDataEntry` object, which contains a `value` and an optional list of `ids` representing [compression group id, partition id] pairs.\n\n### Changelog\n* **draft-ietf-protected-audience-key-value-services.md**\n  * Added `perPartitionMetadata` field to the `request` object (line 285).\n  * Defined the `perPartitionMetadata` object structure (lines 322-330).\n  * Defined the `contextualDataEntry` object structure (lines 332-338).\n\n\n<details>\n\n<summary><b>Using Gemini Code Assist</b></summary>\n<br>\n\nThe full guide for Gemini Code Assist can be found on our [documentation page](https://developers.google.com/gemini-code-assist/docs/review-github-code), here are some quick tips.\n\n<b>Invoking Gemini</b>\n\nYou can request assistance from Gemini at any point in your pull request via creating an issue comment (i.e. comment on the pull request page) using either `/gemini <command>` or `@gemini-code-assist <command>`. Below is a summary of the supported commands.\n\nFeature | Command | Description\n--- | --- | ---\nCode Review | `/gemini review` | Performs a code review for the current pull request in its current state.\nPull Request Summary | `/gemini summary` | Provides a summary of the current pull request in its current state.\nComment | @gemini-code-assist | Responds in comments when explicitly tagged, both in issue comments and review comments.\nHelp | `/gemini help` | Displays a list of available commands.\n\n<b>Customization</b>\n\nTo customize Gemini Code Assist for GitHub experience, repository maintainers can create a configuration file and/or provide a custom code review style guide (such as PEP-8 for Python) by creating and adding files to a `.gemini/` folder in the base of the repository. Detailed instructions can be found [here](https://developers.google.com/gemini-code-assist/docs/customize-gemini-behavior-github).\n\n<b>Limitations & Feedback</b>\n\nGemini Code Assist is currently in preview and may make mistakes. Please leave feedback on any instances where its feedback is incorrect or counter productive. You can react with :thumbsup: and :thumbsdown: on @gemini-code-assist comments to provide feedback.\n\n</details>\n\n<b>You can also get AI-powered code generation, chat, as well as code reviews directly in the IDE at no cost with the [Gemini Code Assist IDE Extension](https://cloud.google.com/products/gemini/code-assist).</b>\n\n\n[^1]: Review the [Privacy Notices](https://policies.google.com/privacy), [Generative AI Prohibited Use Policy](https://policies.google.com/terms/generative-ai/use-policy), [Terms of Service](https://policies.google.com/terms), and learn how to configure Gemini Code Assist in GitHub [here](https://developers.google.com/gemini-code-assist/docs/review-github-code). Gemini can make mistakes, so double check it and [use code with caution](https://support.google.com/legal/answer/13505487).\n\n---\n\n> Metadata's dance,\n> Partitioned whispers enhance,\n> Context takes its stage.\n\n",
          "createdAt": "2025-04-15T15:20:44Z",
          "updatedAt": "2025-04-15T15:20:44Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOMnZLYc6lCUHH",
          "commit": {
            "abbreviatedOid": "e5b9691"
          },
          "author": "gemini-code-assist",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "## Code Review\nThis pull request introduces the `perPartitionMetadata` field to the request schema, allowing clients to send partition-level metadata to the Key Value Service. This metadata can contain contextual data like `sellerTKVSignals` or `buyerTKVSignals`. The changes also define the structure of `perPartitionMetadata` and `contextualDataEntry`. Overall, this is a useful addition to the specification.\n\n### Merge Readiness\nThe changes introduce a new feature to the specification, which seems well-defined. I did not find any critical or high severity issues. Therefore, the pull request appears to be in good shape to be merged, but I would recommend considering the medium severity issue before merging. I am unable to directly approve this pull request, and recommend that others review and approve this code before merging.",
          "createdAt": "2025-04-15T15:20:51Z",
          "updatedAt": "2025-04-15T15:20:51Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "![medium](https://img.shields.io/badge/priority-medium-yellow)\n\nConsider rephrasing this sentence for clarity. It currently states that duplicate metadata specification will result in an error, but it's unclear what constitutes a 'duplicate' in this context. Specifying the exact conditions that trigger the error would be helpful. For example, does it apply only to identical values, or also to different values for the same key?",
              "createdAt": "2025-04-15T15:20:51Z",
              "updatedAt": "2025-04-15T15:20:51Z"
            }
          ]
        }
      ]
    },
    {
      "number": 7,
      "id": "PR_kwDOMnZLYc6SsPm9",
      "title": "fix lint",
      "url": "https://github.com/privacysandbox/draft-ietf-protected-audience-key-value-service/pull/7",
      "state": "MERGED",
      "author": "lusayaa",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-04-15T15:30:12Z",
      "updatedAt": "2025-04-15T15:31:23Z",
      "baseRepository": "privacysandbox/draft-ietf-protected-audience-key-value-service",
      "baseRefName": "main",
      "baseRefOid": "5f2886576de476dac978f2b983755ce25faf9c7b",
      "headRepository": "lusayaa/draft-ietf-protected-audience-key-value-service",
      "headRefName": "main",
      "headRefOid": "a17581c62b2d67a131e748922c55b8aa46217d0f",
      "closedAt": "2025-04-15T15:31:23Z",
      "mergedAt": "2025-04-15T15:31:23Z",
      "mergedBy": "lusayaa",
      "mergeCommit": {
        "oid": "3abc481c198391df4748cc239a2700c859a533e0"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMnZLYc6lCc4q",
          "commit": {
            "abbreviatedOid": "a17581c"
          },
          "author": "gemini-code-assist",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "Hello @lusayaa, I'm Gemini Code Assist[^1]! I'm currently reviewing this pull request and will post my feedback shortly. In the meantime, here's a summary to help you and other reviewers quickly get up to speed!\n\n## Summary of Changes\nThis pull request, titled \"fix lint\", appears to address a minor linting issue in the `draft-ietf-protected-audience-key-value-services.md` file. Specifically, it corrects a grammatical error in a comment, changing \"a list of\" to \"a list of\". This change improves the readability and clarity of the document.\n\n### Highlights\n* **Linting**: The primary focus of this pull request is to fix a linting issue related to grammar within a comment in the markdown file.\n* **Readability**: The change enhances the readability of the documentation by correcting a minor grammatical error.\n\n### Changelog\n* **draft-ietf-protected-audience-key-value-services.md**\n  * Corrected a grammatical error in a comment, changing \"a list of\" to \"a list of\".\n\n\n<details>\n\n<summary><b>Using Gemini Code Assist</b></summary>\n<br>\n\nThe full guide for Gemini Code Assist can be found on our [documentation page](https://developers.google.com/gemini-code-assist/docs/review-github-code), here are some quick tips.\n\n<b>Invoking Gemini</b>\n\nYou can request assistance from Gemini at any point in your pull request via creating an issue comment (i.e. comment on the pull request page) using either `/gemini <command>` or `@gemini-code-assist <command>`. Below is a summary of the supported commands.\n\nFeature | Command | Description\n--- | --- | ---\nCode Review | `/gemini review` | Performs a code review for the current pull request in its current state.\nPull Request Summary | `/gemini summary` | Provides a summary of the current pull request in its current state.\nComment | @gemini-code-assist | Responds in comments when explicitly tagged, both in issue comments and review comments.\nHelp | `/gemini help` | Displays a list of available commands.\n\n<b>Customization</b>\n\nTo customize Gemini Code Assist for GitHub experience, repository maintainers can create a configuration file and/or provide a custom code review style guide (such as PEP-8 for Python) by creating and adding files to a `.gemini/` folder in the base of the repository. Detailed instructions can be found [here](https://developers.google.com/gemini-code-assist/docs/customize-gemini-behavior-github).\n\n<b>Limitations & Feedback</b>\n\nGemini Code Assist is currently in preview and may make mistakes. Please leave feedback on any instances where its feedback is incorrect or counter productive. You can react with :thumbsup: and :thumbsdown: on @gemini-code-assist comments to provide feedback.\n\n</details>\n\n<b>You can also get AI-powered code generation, chat, as well as code reviews directly in the IDE at no cost with the [Gemini Code Assist IDE Extension](https://cloud.google.com/products/gemini/code-assist).</b>\n\n\n[^1]: Review the [Privacy Notices](https://policies.google.com/privacy), [Generative AI Prohibited Use Policy](https://policies.google.com/terms/generative-ai/use-policy), [Terms of Service](https://policies.google.com/terms), and learn how to configure Gemini Code Assist in GitHub [here](https://developers.google.com/gemini-code-assist/docs/review-github-code). Gemini can make mistakes, so double check it and [use code with caution](https://support.google.com/legal/answer/13505487).\n\n---\n\n> A tiny fix,\n> A linting error's plight,\n> Code clarity blooms.\n\n",
          "createdAt": "2025-04-15T15:30:20Z",
          "updatedAt": "2025-04-15T15:30:20Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOMnZLYc6lCc8_",
          "commit": {
            "abbreviatedOid": "a17581c"
          },
          "author": "gemini-code-assist",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "## Code Review\nThe pull request addresses a minor typo in the documentation. The change improves the clarity of the document.\n\n### Merge Readiness\nThe pull request is ready for merging as it fixes a minor typo and improves the clarity of the documentation. I am unable to directly approve the pull request, and users should have others review and approve this code before merging.",
          "createdAt": "2025-04-15T15:30:26Z",
          "updatedAt": "2025-04-15T15:30:26Z",
          "comments": []
        }
      ]
    },
    {
      "number": 8,
      "id": "PR_kwDOMnZLYc6SswkT",
      "title": "Add contextual data to fetch request format",
      "url": "https://github.com/privacysandbox/draft-ietf-protected-audience-key-value-service/pull/8",
      "state": "CLOSED",
      "author": "xtlsheep",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "1. Add `perPartitionMetadata` in request.\r\n2. Add `contextualData` in `perPartitionMetadata`.\r\n3. Align the name format in section request formatting:\r\n    * Use lower case with space for all names in pass-in arguments.\r\n    * Use camel case for all variables in request construction description.",
      "createdAt": "2025-04-15T16:26:58Z",
      "updatedAt": "2025-04-15T16:29:31Z",
      "baseRepository": "privacysandbox/draft-ietf-protected-audience-key-value-service",
      "baseRefName": "main",
      "baseRefOid": "3abc481c198391df4748cc239a2700c859a533e0",
      "headRepository": "xtlsheep/draft-ietf-protected-audience-key-value-service",
      "headRefName": "patch-1",
      "headRefOid": "d135d867654c5c8c46fd289209d74b204aa71deb",
      "closedAt": "2025-04-15T16:29:07Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMnZLYc6lDKpB",
          "commit": {
            "abbreviatedOid": "d135d86"
          },
          "author": "gemini-code-assist",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "Hello @xtlsheep, I'm Gemini Code Assist[^1]! I'm currently reviewing this pull request and will post my feedback shortly. In the meantime, here's a summary to help you and other reviewers quickly get up to speed!\n\n## Summary of Changes\nThis pull request focuses on adding contextual data to the fetch request format within the Protected Audience Key-Value Services draft. The changes involve incorporating `perPartitionMetadata` in the request, adding `contextualData` within `perPartitionMetadata`, and aligning the naming conventions in the request formatting section. Specifically, it advocates for using lowercase with spaces for pass-in arguments and camel case for variables used in request construction descriptions. The changes also remove the previous definition of `perPartitionMetadata` and `contextualDataEntry`.\n\n### Highlights\n* **Feature Addition**: Introduces `perPartitionMetadata` and `contextualData` to the request format, enabling the inclusion of contextual signals in fetch requests.\n* **Naming Convention Alignment**: Standardizes naming conventions by using lowercase with spaces for input arguments and camel case for internal variables.\n* **Data Structure Modification**: The pull request modifies the structure of the request to include contextual data, enhancing the flexibility of data transmission.\n\n### Changelog\n* **draft-ietf-protected-audience-key-value-services.md**\n  * Removes the `perPartitionMetadata` property from the base request structure (lines 285-287).\n  * Removes the definitions for `perPartitionMetadata` and `contextualDataEntry` (lines 322-339).\n  * Adds `contextual data` to the algorithm input parameters, defining its structure with compression group and partition identifiers (lines 341-347).\n  * Adds `perPartitionMetadata` initialization (line 364).\n  * Changes `compressionGroupId` to `compression group id` (line 368).\n  * Introduces logic to process `contextual data` and populate `perPartitionMetadata` (lines 380-392).\n  * Adds `perPartitionMetadata` to the `requestMap` (line 396).\n\n\n<details>\n\n<summary><b>Using Gemini Code Assist</b></summary>\n<br>\n\nThe full guide for Gemini Code Assist can be found on our [documentation page](https://developers.google.com/gemini-code-assist/docs/review-github-code), here are some quick tips.\n\n<b>Invoking Gemini</b>\n\nYou can request assistance from Gemini at any point in your pull request via creating an issue comment (i.e. comment on the pull request page) using either `/gemini <command>` or `@gemini-code-assist <command>`. Below is a summary of the supported commands.\n\nFeature | Command | Description\n--- | --- | ---\nCode Review | `/gemini review` | Performs a code review for the current pull request in its current state.\nPull Request Summary | `/gemini summary` | Provides a summary of the current pull request in its current state.\nComment | @gemini-code-assist | Responds in comments when explicitly tagged, both in issue comments and review comments.\nHelp | `/gemini help` | Displays a list of available commands.\n\n<b>Customization</b>\n\nTo customize Gemini Code Assist for GitHub experience, repository maintainers can create a configuration file and/or provide a custom code review style guide (such as PEP-8 for Python) by creating and adding files to a `.gemini/` folder in the base of the repository. Detailed instructions can be found [here](https://developers.google.com/gemini-code-assist/docs/customize-gemini-behavior-github).\n\n<b>Limitations & Feedback</b>\n\nGemini Code Assist is currently in preview and may make mistakes. Please leave feedback on any instances where its feedback is incorrect or counter productive. You can react with :thumbsup: and :thumbsdown: on @gemini-code-assist comments to provide feedback.\n\n</details>\n\n<b>You can also get AI-powered code generation, chat, as well as code reviews directly in the IDE at no cost with the [Gemini Code Assist IDE Extension](https://cloud.google.com/products/gemini/code-assist).</b>\n\n\n[^1]: Review the [Privacy Notices](https://policies.google.com/privacy), [Generative AI Prohibited Use Policy](https://policies.google.com/terms/generative-ai/use-policy), [Terms of Service](https://policies.google.com/terms), and learn how to configure Gemini Code Assist in GitHub [here](https://developers.google.com/gemini-code-assist/docs/review-github-code). Gemini can make mistakes, so double check it and [use code with caution](https://support.google.com/legal/answer/13505487).\n\n---\n\n> A request takes form,\n> Context added, weathering the storm,\n> Signals now align,\n> Data starts to shine,\n> A better fetch, keeping code warm.\n\n",
          "createdAt": "2025-04-15T16:27:09Z",
          "updatedAt": "2025-04-15T16:27:09Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOMnZLYc6lDKwq",
          "commit": {
            "abbreviatedOid": "d135d86"
          },
          "author": "gemini-code-assist",
          "authorAssociation": "NONE",
          "state": "CHANGES_REQUESTED",
          "body": "## Code Review\nThe pull request introduces contextual data to the fetch request format, adding `perPartitionMetadata` and `contextualData` to the request structure. The changes also aim to align the naming format within the request formatting section. Overall, the changes seem reasonable, but there are a few areas that could be improved for clarity and correctness.\n\n### Summary of Findings\n* **Inconsistent Naming Conventions**: The pull request aims to align naming conventions, but inconsistencies remain, particularly regarding the use of camel case versus lowercase with spaces. Specifically, the description of the 'compression group id' parameter is inconsistent.\n* **Missing perPartitionMetadata in Request Schema**: The `perPartitionMetadata` field is added to the request generation algorithm but is missing from the `request` schema definition, which could lead to validation issues.\n* **Clarification of 'index' Parameters**: The description of the `index` parameters (compression group id and id) within `contextual data` could benefit from more explicit language to avoid ambiguity.\n\n### Merge Readiness\nWhile the pull request introduces important functionality, there are a few issues that should be addressed before merging. Specifically, the missing `perPartitionMetadata` in the request schema is a critical issue that needs to be resolved. Additionally, the inconsistent naming conventions and the unclear description of 'index' parameters should be clarified. I am unable to approve this pull request, and recommend that another reviewer approves this code before merging.",
          "createdAt": "2025-04-15T16:27:20Z",
          "updatedAt": "2025-04-15T16:27:20Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "![high](https://img.shields.io/badge/priority-high-orange)\n\nYou're introducing `perPartitionMetadata` here, but it's not present in the `request` schema defined earlier (lines 278-286). This could lead to validation issues.  Shouldn't the schema be updated to include this field?",
              "createdAt": "2025-04-15T16:27:20Z",
              "updatedAt": "2025-04-15T16:27:20Z"
            },
            {
              "originalPosition": 50,
              "body": "![medium](https://img.shields.io/badge/priority-medium-yellow)\n\nThe description uses 'compression group id' (lowercase with spaces), while the variable name in the algorithm uses camel case (`compressionGroupId`).  For consistency, consider using camel case here as well, or consistently use lowercase with spaces throughout the document.",
              "createdAt": "2025-04-15T16:27:20Z",
              "updatedAt": "2025-04-15T16:27:20Z"
            }
          ]
        }
      ]
    },
    {
      "number": 9,
      "id": "PR_kwDOMnZLYc6Ss87x",
      "title": "Add contextualData to #request-generate",
      "url": "https://github.com/privacysandbox/draft-ietf-protected-audience-key-value-service/pull/9",
      "state": "OPEN",
      "author": "xtlsheep",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "1. Add `perPartitionMetadata` to `requestMap`.\r\n2. Add `contextualData` to `perPartitionMetadata`.\r\n3. Align naming rules:\r\n  * Use lower case with space for pass-in arguments.\r\n  * Use camel case for variables in request generation.",
      "createdAt": "2025-04-15T16:51:41Z",
      "updatedAt": "2025-04-15T18:05:17Z",
      "baseRepository": "privacysandbox/draft-ietf-protected-audience-key-value-service",
      "baseRefName": "main",
      "baseRefOid": "a0a71d35eafebbe1bfdc97a704eea2ae3d783d9b",
      "headRepository": "xtlsheep/draft-ietf-protected-audience-key-value-service",
      "headRefName": "xtlsheep-patch-1",
      "headRefOid": "af2e363de2a4439dd6fc57833696928eeeed04c3",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMnZLYc6lDbPm",
          "commit": {
            "abbreviatedOid": "706ee38"
          },
          "author": "gemini-code-assist",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "Hello @xtlsheep, I'm Gemini Code Assist[^1]! I'm currently reviewing this pull request and will post my feedback shortly. In the meantime, here's a summary to help you and other reviewers quickly get up to speed!\n\n## Summary of Changes\nThis pull request introduces `contextualData` to the `#request-generate` process within the Protected Audience Key-Value Services specification. It modifies the request generation algorithm to include contextual signals configuration. The changes involve adding `perPartitionMetadata` to `requestMap`, incorporating `contextualData` into `perPartitionMetadata`, and aligning naming conventions for arguments and variables.\n\n### Highlights\n* **Feature Addition**: Adds `contextualData` to the request generation process, allowing for contextual signals configuration.\n* **Data Structure Modification**: Introduces `perPartitionMetadata` to `requestMap` to encapsulate contextual data.\n* **Naming Convention Alignment**: Standardizes naming rules by using lowercase with spaces for pass-in arguments and camel case for variables in request generation.\n\n### Changelog\n* **draft-ietf-protected-audience-key-value-services.md**\n  * Added `contextual data` map to the algorithm input, defining its structure with keys as strings and values as lists of `index`.\n  * Modified the request generation algorithm to include `perPartitionMetadata` in `requestMap`.\n  * Implemented logic to populate `contextualData` based on the input `contextual data` map, creating a list of data maps with 'ids' and 'value' fields.\n  * Updated `requestMap` to include `perPartitionMetadata`.\n  * Corrected `compression group id` reference on line 381 to `compression group id` on line 389.\n\n\n<details>\n\n<summary><b>Using Gemini Code Assist</b></summary>\n<br>\n\nThe full guide for Gemini Code Assist can be found on our [documentation page](https://developers.google.com/gemini-code-assist/docs/review-github-code), here are some quick tips.\n\n<b>Invoking Gemini</b>\n\nYou can request assistance from Gemini at any point in your pull request via creating an issue comment (i.e. comment on the pull request page) using either `/gemini <command>` or `@gemini-code-assist <command>`. Below is a summary of the supported commands.\n\nFeature | Command | Description\n--- | --- | ---\nCode Review | `/gemini review` | Performs a code review for the current pull request in its current state.\nPull Request Summary | `/gemini summary` | Provides a summary of the current pull request in its current state.\nComment | @gemini-code-assist | Responds in comments when explicitly tagged, both in issue comments and review comments.\nHelp | `/gemini help` | Displays a list of available commands.\n\n<b>Customization</b>\n\nTo customize Gemini Code Assist for GitHub experience, repository maintainers can create a configuration file and/or provide a custom code review style guide (such as PEP-8 for Python) by creating and adding files to a `.gemini/` folder in the base of the repository. Detailed instructions can be found [here](https://developers.google.com/gemini-code-assist/docs/customize-gemini-behavior-github).\n\n<b>Limitations & Feedback</b>\n\nGemini Code Assist is currently in preview and may make mistakes. Please leave feedback on any instances where its feedback is incorrect or counter productive. You can react with :thumbsup: and :thumbsdown: on @gemini-code-assist comments to provide feedback.\n\n</details>\n\n<b>You can also get AI-powered code generation, chat, as well as code reviews directly in the IDE at no cost with the [Gemini Code Assist IDE Extension](https://cloud.google.com/products/gemini/code-assist).</b>\n\n\n[^1]: Review the [Privacy Notices](https://policies.google.com/privacy), [Generative AI Prohibited Use Policy](https://policies.google.com/terms/generative-ai/use-policy), [Terms of Service](https://policies.google.com/terms), and learn how to configure Gemini Code Assist in GitHub [here](https://developers.google.com/gemini-code-assist/docs/review-github-code). Gemini can make mistakes, so double check it and [use code with caution](https://support.google.com/legal/answer/13505487).\n\n---\n\n> A map of requests takes form,\n> With data to weather the norm,\n> Contextual signals arise,\n> In encoded CBOR skies,\n> A new standard to perform.\n\n",
          "createdAt": "2025-04-15T16:51:50Z",
          "updatedAt": "2025-04-15T16:51:50Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOMnZLYc6lDbd-",
          "commit": {
            "abbreviatedOid": "706ee38"
          },
          "author": "gemini-code-assist",
          "authorAssociation": "NONE",
          "state": "CHANGES_REQUESTED",
          "body": "## Code Review\nThe pull request introduces contextual data to the request generation process, enhancing the flexibility of the Key Value Service. The changes seem well-structured and align with the overall goals of the project. However, there are a few areas where improvements can be made to enhance clarity and maintainability.\n\n### Summary of Findings\n* **Naming Consistency**: The pull request aims to align naming rules, but inconsistencies remain. Specifically, the use of `compression group id` (with spaces) in the input parameters and `compressionGroupId` (camel case) in the code could lead to confusion. Consistent naming is crucial for maintainability.\n* **Clarity of 'contextual data' Processing**: The logic for processing `contextual data` involves multiple nested loops and map creations. While functional, it could benefit from improved readability and potentially be refactored into smaller, more manageable functions.\n\n### Merge Readiness\nThe pull request is almost ready for merging. Addressing the naming inconsistencies and improving the clarity of the `contextual data` processing logic would significantly enhance the code's quality. I am unable to directly approve the pull request, and other reviewers should review and approve this code before merging. I recommend that the pull request not be merged until the high severity issues are addressed.",
          "createdAt": "2025-04-15T16:51:59Z",
          "updatedAt": "2025-04-15T16:51:59Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "![high](https://img.shields.io/badge/priority-high-orange)\n\nConsider using a consistent naming convention. The input parameter uses `compression group id` (lowercase with space), while the code uses `compressionGroupId` (camel case). Using `compressionGroupId` consistently would improve readability and reduce potential confusion.\n\n```suggestion\n    1. Set `p[\"compressionGroupId\"]` to `group`'s `compressionGroupId`.\n```",
              "createdAt": "2025-04-15T16:51:59Z",
              "updatedAt": "2025-04-15T16:51:59Z"
            },
            {
              "originalPosition": 56,
              "body": "![medium](https://img.shields.io/badge/priority-medium-yellow)\n\nThis section processes the `contextual data`. Consider breaking this down into smaller functions to improve readability. For example, the inner loop that creates `idPair` and appends it to `ids` could be extracted into a separate function.",
              "createdAt": "2025-04-15T16:51:59Z",
              "updatedAt": "2025-04-15T16:51:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6lEFze",
          "commit": {
            "abbreviatedOid": "706ee38"
          },
          "author": "lusayaa",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-04-15T17:57:00Z",
          "updatedAt": "2025-04-15T17:57:01Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "This is still messed up if you click on the rich diff view: https://screenshot.googleplex.com/9vrRvrnx7iqwZzU\r\n\r\nI think it's an indentation error? Needs to be probably 4 spaces, see the \"Parsing a request\" section below.",
              "createdAt": "2025-04-15T17:57:00Z",
              "updatedAt": "2025-04-15T17:57:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6lEKaZ",
          "commit": {
            "abbreviatedOid": "706ee38"
          },
          "author": "xtlsheep",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-04-15T18:05:16Z",
          "updatedAt": "2025-04-15T18:05:16Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "Yeah you are correct, it was due to the indentation. Fixed.",
              "createdAt": "2025-04-15T18:05:16Z",
              "updatedAt": "2025-04-15T18:05:17Z"
            }
          ]
        }
      ]
    },
    {
      "number": 10,
      "id": "PR_kwDOMnZLYc6SuqGf",
      "title": "Update request parsing and response generation sections",
      "url": "https://github.com/privacysandbox/draft-ietf-protected-audience-key-value-service/pull/10",
      "state": "MERGED",
      "author": "lusayaa",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-04-15T20:34:08Z",
      "updatedAt": "2025-04-15T21:14:32Z",
      "baseRepository": "privacysandbox/draft-ietf-protected-audience-key-value-service",
      "baseRefName": "main",
      "baseRefOid": "a0a71d35eafebbe1bfdc97a704eea2ae3d783d9b",
      "headRepository": "lusayaa/draft-ietf-protected-audience-key-value-service",
      "headRefName": "main",
      "headRefOid": "4e990bad0d3fbb9c06575a732363f0f5710b4f69",
      "closedAt": "2025-04-15T21:14:32Z",
      "mergedAt": "2025-04-15T21:14:32Z",
      "mergedBy": "lusayaa",
      "mergeCommit": {
        "oid": "e0d4150265cc6e19370c6ab71ba67b683714aa20"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMnZLYc6lFtdW",
          "commit": {
            "abbreviatedOid": "4e990ba"
          },
          "author": "gemini-code-assist",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "Hello @lusayaa, I'm Gemini Code Assist[^1]! I'm currently reviewing this pull request and will post my feedback shortly. In the meantime, here's a summary to help you and other reviewers quickly get up to speed!\n\n## Summary of Changes\nThis pull request focuses on updating the request parsing and response generation sections of the specification. The changes include modifications to the request parsing algorithm, specifically around how partitions and their metadata are handled. A new function `checkPartitionLevelMetadata` is introduced to validate partition-level metadata. The response generation algorithm is also updated to use a map of partition outputs instead of a list, and the logic for creating compression groups is adjusted accordingly.\n\n### Highlights\n* **Request Parsing Update**: The request parsing section is updated to include a check for duplicate partition-level metadata using the new `checkPartitionLevelMetadata` function. It also changes how partition data is stored during processing, using `partitionInputMap` instead of `compressionGroupMap`.\n* **Metadata Validation**: Introduces a detailed algorithm for checking partition-level metadata to ensure there are no duplicates and that the metadata structure is valid.\n* **Response Generation Update**: The response generation algorithm is modified to use a map (`partitionOutputMap`) as input, where keys are tuples of compression group ID and partition ID. The logic for creating compression groups is updated to reflect this change.\n\n### Changelog\n* **draft-ietf-protected-audience-key-value-services.md**\n  * Updates the request parsing algorithm to use `partitionInputMap` and introduces `checkPartitionLevelMetadata` function.\n  * Adds a detailed algorithm for `checkPartitionLevelMetadata` to validate partition-level metadata.\n  * Modifies the response generation algorithm to use `partitionOutputMap` as input and updates the compression group creation logic.\n\n\n<details>\n\n<summary><b>Using Gemini Code Assist</b></summary>\n<br>\n\nThe full guide for Gemini Code Assist can be found on our [documentation page](https://developers.google.com/gemini-code-assist/docs/review-github-code), here are some quick tips.\n\n<b>Invoking Gemini</b>\n\nYou can request assistance from Gemini at any point in your pull request via creating an issue comment (i.e. comment on the pull request page) using either `/gemini <command>` or `@gemini-code-assist <command>`. Below is a summary of the supported commands.\n\nFeature | Command | Description\n--- | --- | ---\nCode Review | `/gemini review` | Performs a code review for the current pull request in its current state.\nPull Request Summary | `/gemini summary` | Provides a summary of the current pull request in its current state.\nComment | @gemini-code-assist | Responds in comments when explicitly tagged, both in issue comments and review comments.\nHelp | `/gemini help` | Displays a list of available commands.\n\n<b>Customization</b>\n\nTo customize Gemini Code Assist for GitHub experience, repository maintainers can create a configuration file and/or provide a custom code review style guide (such as PEP-8 for Python) by creating and adding files to a `.gemini/` folder in the base of the repository. Detailed instructions can be found [here](https://developers.google.com/gemini-code-assist/docs/customize-gemini-behavior-github).\n\n<b>Limitations & Feedback</b>\n\nGemini Code Assist is currently in preview and may make mistakes. Please leave feedback on any instances where its feedback is incorrect or counter productive. You can react with :thumbsup: and :thumbsdown: on @gemini-code-assist comments to provide feedback.\n\n</details>\n\n<b>You can also get AI-powered code generation, chat, as well as code reviews directly in the IDE at no cost with the [Gemini Code Assist IDE Extension](https://cloud.google.com/products/gemini/code-assist).</b>\n\n\n[^1]: Review the [Privacy Notices](https://policies.google.com/privacy), [Generative AI Prohibited Use Policy](https://policies.google.com/terms/generative-ai/use-policy), [Terms of Service](https://policies.google.com/terms), and learn how to configure Gemini Code Assist in GitHub [here](https://developers.google.com/gemini-code-assist/docs/review-github-code). Gemini can make mistakes, so double check it and [use code with caution](https://support.google.com/legal/answer/13505487).\n\n---\n\n> A map for outputs,\n> A check for metadata's keep,\n> Response takes new form.\n\n",
          "createdAt": "2025-04-15T20:34:16Z",
          "updatedAt": "2025-04-15T20:34:16Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOMnZLYc6lFtlo",
          "commit": {
            "abbreviatedOid": "4e990ba"
          },
          "author": "gemini-code-assist",
          "authorAssociation": "NONE",
          "state": "CHANGES_REQUESTED",
          "body": "## Code Review\nThe pull request updates the request parsing and response generation sections of the document. The changes introduce new checks for partition-level metadata and modify the response generation algorithm to use a map of partition outputs. Overall, the changes seem well-structured and improve the clarity and correctness of the document.\n\n### Summary of Findings\n* **Missing check for `partition` existence**: In the `checkPartitionLevelMetadata` function, there is no check to ensure that `partition` exists before accessing its properties. This could lead to a potential error if a partition is missing.\n* **Inconsistent naming**: The variable `current id` is sometimes referred to as `current id` and sometimes as `current_id`. It would be good to make this consistent.\n* **Potential infinite loop**: In the response generation section, there's a potential for an infinite loop if the serialization fails repeatedly.\n\n### Merge Readiness\nThe pull request introduces significant changes to the request parsing and response generation sections. While the changes appear to be well-structured, there are a few issues that need to be addressed before merging. Specifically, the missing check for `partition` existence in `checkPartitionLevelMetadata` and the potential infinite loop in response generation should be fixed. I am unable to approve this pull request, and recommend that others review and approve this code before merging.",
          "createdAt": "2025-04-15T20:34:25Z",
          "updatedAt": "2025-04-15T20:34:26Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "![high](https://img.shields.io/badge/priority-high-orange)\n\nIt's good to iterate through the partitions, but there's no check to ensure that `partition` exists before accessing its properties. This could lead to a potential error if a partition is missing. Consider adding a check to ensure that `partition` exists before accessing its properties.\n\n```suggestion\n4. For each `partition` in `processed request[\"partitions\"]`:\n   1. If `partition` exists:\n      1. Compare `globalPerPartitionMetadata` keys with `partition[\"metadata\"]` keys.\n```",
              "createdAt": "2025-04-15T20:34:25Z",
              "updatedAt": "2025-04-15T20:34:26Z"
            },
            {
              "originalPosition": 106,
              "body": "![medium](https://img.shields.io/badge/priority-medium-yellow)\n\nIf the serialization fails repeatedly, this could lead to an infinite loop. Consider adding a check to prevent this.\n\n```suggestion\n      1. On serialization failure, continue.\n      2. If serialization fails more than N times, return failure.\n```",
              "createdAt": "2025-04-15T20:34:26Z",
              "updatedAt": "2025-04-15T20:34:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMnZLYc6lF3l5",
          "commit": {
            "abbreviatedOid": "4e990ba"
          },
          "author": "lx3-g",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-04-15T20:47:16Z",
          "updatedAt": "2025-04-15T20:47:16Z",
          "comments": []
        }
      ]
    }
  ]
}